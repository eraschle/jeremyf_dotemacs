# -*- org-insert-tilde-language: emacs-lisp; -*-
#+TITLE: Burning Wheel Emacs Configuration
#+AUTHOR: Jeremy Friesen
#+EMAIL: jeremy@jeremyfriesen.com
#+STARTUP: showall
#+OPTIONS: toc:3

The functions of this file build on functions from [[file:configuration.org][Configuration]].

* Minor Mode for Burning Wheel

#+begin_src emacs-lisp
  (jf/minor-mode-maker :title "Burning Wheel Gold"
		       :abbr "bwg"
		       :hooks (list 'org-mode-hook 'markdown-mode-hook))
#+end_src

* Quick Help Functions

Most role-playing games I play may require a bit of consultation. The following
“quick help” methods are tables that I commonly reference when playing Burning
Wheel Gold.

#+begin_src emacs-lisp
  (jf/transient-quick-help jf/bwg-qh-wises
    "BWG Wises Obstacles (page 309)"
    :label "Wises"
    :body
    (concat
     "Common knowledge ............. Ob 1\n"
     "An interesting fact .......... Ob 2\n"
     "Details ...................... Ob 3\n"
     "Uncommon knowledge ........... Ob 4\n"
     "Rare goods ................... Ob 5\n"
     "Bizarre or obscure ........... Ob 7\n"
     "Freaky details or specifics .. Ob 8"))

  (jf/transient-quick-help jf/bwg-qh-expertise-exponent
    "BWG Expertise Exponent (page 12)"
    :label "Exponents"
    :body
    (concat
     "Exp 1  is naturally disinclined, crippled, or utterly incompetent.\n"
     "Exp 2  is untrained, raw, weak, or unpracticed.\n"
     "Exp 3  is nominally trained and practiced.\n"
     "Exp 4  is competent; everday stuff doesn't pose a challenge.\n"
     "Exp 5  is expert.\n"
     "Exp 6  is near mastery.\n"
     "Exp 7  is excellence.\n"
     "Exp 8  is total mastery, complete understanding.\n"
     "Exp 9  is uncanny; incomprehensibly good.\n"
     "Exp 10 is as near perfection as the system allows."))

  (jf/transient-quick-help jf/bwg-qh-absolute-difficulty
    "BWG Absolute Difficulty (page 15)"
    :label "Difficulty"
    :body
    (concat
     "Ob 1  A simple act done with little thought.\n"
     "Ob 2  An act performed routinely at your job.\n"
     "Ob 3  An act you can accomplish if you concentrate.\n"
     "Ob 4  A risky act.\n"
     "Ob 5  An act that requires expertise.\n"
     "Ob 6  An act that requires a heroic effort.\n"
     "Ob 7  An improbable feat.\n"
     "Ob 8  An act requiring preternatural ability or a lot of help.\n"
     "Ob 9  An act deemed nearly impossible.\n"
     "Ob 10 A miracle."))

  (jf/transient-quick-help jf/bwg-qh-circles-obstacles
    "BWG Circles Obstacles (page 380-381)"
    :label "Circles"
    :body
    (concat
     "Occupation\n"
     "  Broad occupation/profession, same life path ... +0 Ob\n"
     "  Uncommon occupation, or within same setting ... +2 Ob\n"
     "  Specific occupation, rare/unique occupation ... +3 Ob\n"
     "\n"
     "Station\n"
     "  Same station .................................. +0 Ob\n"
     "  Lower rank, station, or class ................. +1 Ob\n"
     "  Higher rank, station, or class ................ +2 Ob\n"
     "  Highest station or rank in the setting ........ +3 Ob\n"
     "\n"
     "Disposition and Knowledge\n"
     "  Common to circle .............................. +0 Ob\n"
     "  Different from circle members ................. +1-2 Ob\n"
     "  Specific, detailed, or rare ................... +3 Ob\n"
     "\n"
     "Time and Place\n"
     "  Doesn't matter ................................ +0 Ob\n"
     "  Unusual for this character .................... +1-2 Ob\n"
     "  Right here and now in the middle of trouble ... +3 Ob"))

  (jf/transient-quick-help jf/bwg-qh-steel-test-adjustments
    "BWG Steel Test Adjustments (page 363)"
    :label "Steel"
    :body
    (concat
     "Conditions for Steel Advantags\n"
     "  Being startled by something mundane ........ +2D\n"
     "  Feeling safe in a group of friends/allies .. +1D\n"
     "\n"
     "Conditions for Steel Disadvantages\n"
     "  Being shot at .............................. +1 Ob\n"
     "  Being directly affect by magic ............. +1 Ob\n"
     "  Witnessing a person killed ................. +1 Ob\n"
     "  Small explosions ........................... +2 Ob\n"
     "  Committing murder .......................... +2 Ob\n"
     "  Explosions ................................. +3 Ob\n"
     "  Witnessing pronounced sorcery at play ...... +3 Ob\n"
     "  Seeing a ghost ............................. +3 Ob\n"
     "  Seeing the living dead ..................... +4 Ob\n"
     "  Volcanic eruptions, cataclysm .............. +4 Ob\n"
     "  Seeing horrible magic at work .............. +4 Ob\n"
     "  Being in the presence of the supernatural .. +5 Ob\n"))
#+end_src

** Physical Trauma Gray Scale (PTGS)

When running Burning Wheel Gold, on occassion I need to establish the PTGS for
a creature or person.

#+begin_src emacs-lisp
  (defconst jf/bwg-mortal-wounds-scale
    (let* ((shades '("B" "G" "W"))
	   (rank '(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16))
	   (scale (-flatten
		   (-map (lambda (s)
			   (-map (lambda (r)
				   (format "%s%s" s r))
				 rank))
			 shades))))
      ;; I want B1 to have an index of 1.  Hence pre-pending the 0 to the list.
      (add-to-list 'scale 0)
      scale)
    "The BWG Physical Tolerance Grayscale (from B1 to W16).")
#+end_src

A function for calculating a Black or Gray PTGS.  This is not clean nor
elegant, but it works.

#+begin_src emacs-lisp
  (defun jf/bwg-qh-ptgs (forte power &optional round-up)
    "Calculate Burning Wheel PTGS.

  This requires FORTE, POWER, and ROUND-UP.

  Note, this assumes Black shade only."
    (interactive "sForte: \nsPower: \nP")
    ;; Note the / function uses integer floor division.
    (let* ((forte-index (-elem-index (upcase forte) jf/bwg-mortal-wounds-scale))
	   (power-index (-elem-index (upcase power) jf/bwg-mortal-wounds-scale)))
      (unless forte-index (throw 'invalid-entry (format "Invalid Forte %s" forte)))
      (unless power-index (throw 'invalid-entry (format "Invalid Power %s" power)))
      (cond ((and (< forte-index 14) (< power-index 14))
	     (jf/bwg-qh-ptgs-black forte-index
				   power-index
				   round-up
				   :power-label power
				   :forte-label forte))
	    ((and (< forte-index 14) (< power-index 28))
	     (jf/bwg-qh-ptgs-black forte-index
				   (- power-index 13)
				   round-up
				   :add 2
				   :power-label power
				   :forte-label forte))
	    ((and (< forte-index 28) (< power-index 14))
	     (jf/bwg-qh-ptgs-black (- forte-index 13)
				   power-index
				   round-up
				   :add 2
				   :power-label power
				   :forte-label forte))
	    ((and (< forte-index 28) (< power-index 28))
	     (jf/bwg-qh-ptgs-gray forte-index
				  power-index
				  round-up
				  :power-label power
				  :forte-label forte)))))
#+end_src

On page 546 of “Burning Wheel Gold Revised” we have instructions for
calculating PTGS for Gray-shaded attributes.  This overlays with the
instructions on page 98 of “Burning Wheel Gold Revised”.

#+begin_src emacs-lisp
  (cl-defun jf/bwg-qh-ptgs-black (forte power &optional round-up &key forte-label power-label (add 0))
    "Calculate Burning Wheel PTGS.

  This requires FORTE, POWER, and ROUND-UP.

  Note, this assumes Black shade only."
    (interactive "nForte: \nnPower: \nP")
    ;; Note the / function uses integer floor division.
    (let* ((mw-rnd (if round-up 1 0))
	   (mo (+ 6 add (/ (+ forte power mw-rnd) 2)))
	   (step (+ (/ (+ 1 forte) 2)))
	   (su (+ 1 (/ forte 2)))
	   (li (+ su step))
	   (mi (+ li step))
	   (se (+ mi step))
	   (tr (+ se step))
	   (tr (if (< tr mo) tr (- mo 1)))
	   (se (if (< se tr) se (- tr 1)))
	   (mi (if (< mi se) mi (- se 1)))
	   (li (if (< li mi) li (- mi 1)))
	   (text (format
		  (concat "PTGS: Su %s, Li %s, Mi %s, Se %s, Tr %s, Mo %s"
			  "\nForte: %s, Power: %s, Round Up: %s")
		  (nth su jf/bwg-mortal-wounds-scale)
		  (nth li jf/bwg-mortal-wounds-scale)
		  (nth mi jf/bwg-mortal-wounds-scale)
		  (nth se jf/bwg-mortal-wounds-scale)
		  (nth tr jf/bwg-mortal-wounds-scale)
		  (nth mo jf/bwg-mortal-wounds-scale)
		  forte-label power-label (if round-up "yes" "no"))))
      (kill-new text)
      (message text)))
#+end_src

#+begin_src emacs-lisp
    (cl-defun jf/bwg-qh-ptgs-gray (forte power &optional round-up &key power-label forte-label)
      "Calculate gray FORTE and POWER PTGS"
      (let* ((mw-rnd (if round-up 1 0))
	     (mo (+ 6 (/ (+ forte power mw-rnd) 2)))
	     (su (- forte 13))
	     (li (+ su forte -13))
	     (mi (- mo 4))
	     (se (- mo 2))
	     (tr (- mo 1))
	     (text (format
		    (concat "PTGS: Su %s, Li %s, Mi %s, Se %s, Tr %s, Mo %s"
			    "\nForte: %s, Power: %s, Round Up: %s")
		    (nth su jf/bwg-mortal-wounds-scale)
		    (nth li jf/bwg-mortal-wounds-scale)
		    (nth mi jf/bwg-mortal-wounds-scale)
		    (nth se jf/bwg-mortal-wounds-scale)
		    (nth tr jf/bwg-mortal-wounds-scale)
		    (nth mo jf/bwg-mortal-wounds-scale)
		    forte-label power-label (if round-up "yes" "no"))))
	(kill-new text)
	  (message text)))
#+end_src

* Menu

The following menu is for quick help while playing Burning Wheel games.  I
previously defined the suffixes.

#+begin_src emacs-lisp
  (global-set-key (kbd "C-M-s-b") 'jf/menu--bwg)
  (transient-define-prefix jf/menu--bwg ()
    "Define the BWG help prefix."
    ["Burning Wheel"
     ("c" jf/bwg-qh-circles-obstacles)
     ("d" jf/bwg-qh-absolute-difficulty)
     ("e" jf/bwg-qh-expertise-exponent)
     ("p" "PTGS" jf/bwg-qh-ptgs)
     ("s" jf/bwg-qh-steel-test-adjustments)
     ("w" jf/bwg-qh-wises)
     ])
#+end_src