# -*- org-insert-tilde-language: emacs-lisp; -*-
#+TITLE: Tabs

#+begin_src emacs-lisp
  ;; In v2.5.0 of the =modus-themes=, Prot removed support for Centaur Tabs.  In
  ;; v2.7.0, after upstream changes in =centaur-tabs=, he restored support.  See
  ;; https://git.sr.ht/~protesilaos/modus-themes/tree/main/item/CHANGELOG.org for
  ;; details.
  ;;
  ;; Why the return?  For the amazing =centaur-tabs-switch-group=.
  (use-package centaur-tabs
    :straight t
    :commands (centaur-tabs-group-by-projectile-project)
    :commands (centaur-tabs-group-buffer-groups)
    :hook (dired-mode . centaur-tabs-local-mode)
    (helpful-mode . centaur-tabs-local-mode)
    (denote-backlinks-mode . centaur-tabs-local-mode)
    (org-agenda-mode . centaur-tabs-local-mode)
    :config
    (setq
     centaur-tabs-set-icons t
     centaur-tabs-set-modified-marker t
     centaur-tabs-enable-ido-completion nil
     uniquify-separator "/"
     uniquify-buffer-name-style 'forward)

    (defun centaur-tabs-buffer-groups ()
      "`centaur-tabs-buffer-groups' control buffers' group rules.

  Group centaur-tabs with mode if buffer is derived from `eshell-mode' `emacs-lisp-mode' `dired-mode' `org-mode' `magit-mode'.
  All buffer name start with * will group to \"Emacs\".
  Other buffer group by `centaur-tabs-get-group-name' with project name."
      (list
       (cond
	;; ((not (eq (file-remote-p (buffer-file-name)) nil))
	;; "Remote")
	((or (string-equal "*" (substring (buffer-name) 0 1))
	     (memq major-mode '(magit-process-mode
				magit-status-mode
				magit-diff-mode
				magit-log-mode
				magit-file-mode
				magit-blob-mode
				magit-blame-mode
				)))
	 "Emacs")
	((derived-mode-p 'prog-mode)
	 "Programming")
	((derived-mode-p 'dired-mode)
	 "Dired")
	((memq major-mode '(helpful-mode
			    help-mode))
	 "Help")
	((memq major-mode '(org-mode
			    org-agenda-clockreport-mode
			    org-src-mode
			    org-agenda-mode
			    org-beamer-mode
			    org-indent-mode
			    org-bullets-mode
			    org-cdlatex-mode
			    org-agenda-log-mode
			    diary-mode))
	 "OrgMode")
	(t
	 (centaur-tabs-get-group-name (current-buffer))))))

    ;; :hook
    ;; (dashboard-mode . centaur-tabs-local-mode)
    ;; (term-mode . centaur-tabs-local-mode)
    ;; (calendar-mode . centaur-tabs-local-mode)
    ;; (org-agenda-mode . centaur-tabs-local-mode)
    ;; (helpful-mode . centaur-tabs-local-mode)
    :bind
    ("s-[" . centaur-tabs-backward-group)
    ("s-]" . centaur-tabs-forward-group)
    ;; Move through the tabs of the group
    ("s-{" . centaur-tabs-backward-tab)
    ("s-}" . centaur-tabs-forward-tab)
    ("s-\\" . centaur-tabs-switch-group)
    ("M-s-\\" . jf/centaur-tabs-toggle-grouping))

  (centaur-tabs-group-by-projectile-project)

  (defun jf/centaur-tabs-toggle-grouping ()
    (interactive)
    (if (jf/centaur-tabs-grouping-by-buffer-groups?)
	(centaur-tabs-group-by-projectile-project)
      (centaur-tabs-group-buffer-groups)))

  (defun jf/centaur-tabs-grouping-by-buffer-groups? ()
    (eq 'centaur-tabs-buffer-groups centaur-tabs-buffer-groups-function))

  (centaur-tabs-mode t)
#+end_src